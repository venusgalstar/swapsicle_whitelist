{"version":3,"sources":["config/index.js","App.js","reportWebVitals.js","index.js"],"names":["config","contractAbi","contractAddress","coinAddress","usdtAbi","console","log","App","useState","investAmount","setInvestAmount","tokenAmount","setTokenAmount","account","setAccount","coinDecimals","setCoinDecimals","calcValue","setCalcValue","web3","Web3","givenProvider","contract","eth","Contract","usdt","connectWallet","a","window","ethereum","enable","getAccounts","err","accounts","buy","alert","amount","utils","toBN","mul","Math","pow","toString","sub","methods","approve","send","from","result","invest","gas","result1","useEffect","calcTokenAmount","getUserRewardAmount","call","div","decimals","on","className","style","backgroundImage","width","height","cursor","right","top","onClick","border","borderRadius","background","paddingLeft","value","onChange","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0914439.chunk.js","sourcesContent":["import abi from './InvestManagementAbi.json';\r\nimport usdtAbi from './UsdtAbi.json';\r\n\r\nvar config = {\r\n    contractAbi: abi,\r\n    contractAddress: \"0x49CFab8e81f068Dcf1c00Feb1740F619b2d29862\",\r\n    coinAddress: \"0xc7198437980c041c805A1EDcbA50c1Ce5db95118\",\r\n    usdtAbi: usdtAbi,\r\n\r\n};\r\n\r\nexport default config; ","\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Web3 from 'web3';\n// var config  = require(\"./config/index\");\nimport config from \"./config\";\nimport { ToastContainer, toast } from 'react-toastify';\n\nconsole.log(\"config:\", config);\n\nfunction App() {\n  const [investAmount, setInvestAmount] = useState(0);\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const [account, setAccount] = useState();\n  const [coinDecimals, setCoinDecimals] = useState(6);\n  const [calcValue, setCalcValue] = useState();\n\n  const web3 = new Web3(Web3.givenProvider);\n\n  const contract = new web3.eth.Contract(config.contractAbi, config.contractAddress);\n  const usdt = new web3.eth.Contract(config.usdtAbi, config.coinAddress);\n\n\n  const handleInvest = (event) => {\n    setInvestAmount(event.target.value);\n  }\n  const connectWallet = async () => {\n    await window.ethereum.enable();\n    web3.eth.getAccounts((err, accounts) => {\n      setAccount(accounts[0]);\n      console.log(\"account: \", accounts[0]);\n    })\n  }\n  const buy = async () => {\n    if (!account) {\n      // toast.info(\"Please connect metamask and switch avalanche network.\", {\n      //   position: \"top-center\",\n      //   autoClose: 3000,\n      //   hideProgressBar: true,\n      //   closeOnClick: true,\n      //   pauseOnHover: true,\n      //   draggable: true,\n      //   progress: undefined,\n      // });\n      alert(\"Please connect metamask and switch avalanche network.\");\n      return;\n    }\n    var amount = new web3.utils.toBN(investAmount);\n    amount = amount.mul(new web3.utils.toBN(Math.pow(10, coinDecimals).toString()));\n    amount = amount.sub(new web3.utils.toBN(calcValue[1]));\n    console.log(\"amount:\", amount.toString());\n    if (investAmount > 0 && tokenAmount == 0) {\n      alert(\"You already purchased!\");\n      return;\n    }\n\n    console.log(\"buy real amount:\", amount.toString());\n    var result = await usdt.methods.approve(config.contractAddress, amount).send({ from: account });\n    console.log(\"buy approve:\", result);\n    var result1 = await contract.methods.invest(0, 0, amount).send({ from: account, gas: 210000 });\n    console.log(\"buy invest:\", result1);\n  }\n\n  useEffect(async () => {\n    if (!account) {\n      alert(\"Please connect metamask and switch avalanche network.\");\n      return;\n    }\n    calcTokenAmount();\n  }, [investAmount]);\n\n  useEffect(async () => {\n    calcTokenAmount();\n  }, [account]);\n\n  const calcTokenAmount = async () => {\n    var amount = new web3.utils.toBN(investAmount);\n    amount = amount.mul(new web3.utils.toBN(Math.pow(10, coinDecimals).toString()));\n    var result = await contract.methods.getUserRewardAmount(0, 0, amount, account).call();\n\n    var tokenAmount = new web3.utils.toBN(result[0]);\n    tokenAmount = tokenAmount.div(new web3.utils.toBN(Math.pow(10, 18).toString()));\n    setTokenAmount(tokenAmount);\n    setCalcValue(result);\n  }\n\n  useEffect(async () => {\n    setCoinDecimals(await usdt.methods.decimals().call());\n  }, []);\n\n  window.ethereum.on('accountsChanged', function (accounts) {\n    console.log(\"account changed: \", accounts[0]);\n    setAccount(accounts[0]);\n  })\n\n  return (\n    <>\n      <ToastContainer>\n      </ToastContainer>\n      <div className=\"App pos-rel\" style={{ backgroundImage: 'url(./img/bg.png)', width: \"1917px\", height: \"937px\" }}>\n        {\n          account ?\n            <div className='pos-abs cursor-pointer' style={{ cursor: \"pointer\", backgroundImage: \"url(./img/btn_buy.png)\", width: \"491px\", height: \"74px\", right: \"415px\", top: \"500px\" }} onClick={buy}></div> :\n            <div className='pos-abs cursor-pointer' style={{ cursor: \"pointer\", backgroundImage: \"url(./img/btn_connect.png)\", width: \"491px\", height: \"74px\", right: \"415px\", top: \"500px\" }} onClick={connectWallet}></div>\n        }\n        <input className='pos-abs c-w fs-22' style={{ border: \"1px solid gray\", borderRadius: \"5px\", background: \"#131928\", height: \"60px\", right: \"685px\", top: \"174px\", paddingLeft: \"20px\", width: \"200px\" }} value={investAmount} onChange={handleInvest} />\n        <input className='pos-abs c-w fs-22' style={{ border: \"1px solid gray\", borderRadius: \"5px\", background: \"#131928\", height: \"60px\", right: \"420px\", top: \"174px\", paddingLeft: \"20px\", width: \"200px\" }} value={tokenAmount} onChange={() => { }} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}