{"version":3,"sources":["components/StatefulComponent.js","components/common/Toast.js","components/common/Footer.js","components/invest/ProjectDescription.js","components/invest/PurchaseLimits.js","components/invest/PurchaseForm.js","components/invest/PurchaseComplete.js","components/invest/Popup/Popup.js","components/invest/Purchase.js","pages/Home.js","pages/Admin.js","App.js","reportWebVitals.js","contract/index.js","store/index.js","index.js"],"names":["StatefulComponent","props","state","React","Component","Toast","connect","Footer","className","href","src","ProjectDescription","alt","this","imageUrl","name","account","transaction","purchasedTitle","introTitle","purchasedDescription","introDescription","whitepaperUrl","dispatch","PurchaseLimits","compact","min","max","minInvest","maxInvest","PurchaseForm","handleChange","bind","buy","investAmount","Number","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","payload","investTokenAmount","event","value","target","result","match","setState","placeholder","onChange","investToken","returnToken","returnTokenAmount","readOnly","onClick","PurchaseComplete","frameborder","allow","id","title","range","document","createRange","selectNode","getElementById","window","getSelection","removeAllRanges","addRange","execCommand","classList","add","copyDivToClipboard","class","Popup","handleClose","content","Purchase","isOpen","togglePopup","handleConnect","a","ethereum","enable","purchaseAllowed","Home","Admin","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","contractAbi","contractAddress","coinAddress","usdtAbi","chainId","_initialState","returnTokenAmout","provider","Web3","mainNetUrl","providers","HttpProvider","web3","givenProvider","contract","eth","Contract","usdt","calcTokenAmount","methods","decimals","call","coinDecimals","amount","utils","toBN","toWei","toString","mul","Math","pow","div","getUserRewardAmount","tokenAmount","fromWei","store","returnCoinAmount","console","log","alertMsg","sub","approve","send","from","invest","gas","msg","checkNetwork","toHex","changeNetwork","request","method","params","code","chainName","rpcUrls","on","accounts","getChainId","createStore","action","getAccounts","err","Object","assign","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc6e82fe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class StatefulComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {}\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport class Toast extends React.Component {\r\n    render() {\r\n        return (\r\n            <ToastContainer/>\r\n        );\r\n    }\r\n}\r\n\r\nconnect()(Toast);\r\n","export const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"left\">\r\n                <a href=\"#\"><i className=\"fa-brands fa-twitter\"></i></a>\r\n                <a href=\"#\"><i className=\"fa-brands fa-instagram\"></i></a>\r\n            </div>\r\n            <div className=\"center\">\r\n                <a href=\"#\"><span>Risk Disclaimer</span></a>\r\n                <a href=\"#\"><span>Terms of Use</span></a>\r\n                <a href=\"#\"><span>Terms & Conditions</span></a>\r\n                <a href=\"#\"><span>Privacy & Cookies</span></a>\r\n            </div>\r\n\r\n            <img className=\"popsicle threePop\" src=\"/img/threePop.png\"/>\r\n            <img className=\"popsicle onePop\" src=\"/img/onePop.png\"/>\r\n            <img className=\"popsicle twoPop\" src=\"/img/twoPop.png\"/>\r\n            <img className=\"popsicle fourPop\" src=\"/img/onePop.png\"/>\r\n\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import StatefulComponent from \"../StatefulComponent\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectDescription extends StatefulComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"project-description\">\r\n                    <img className=\"swapPresale\" src=\"/img/swapsicle-presale.png\" alt=\"Swapsicle Logo\"/>\r\n                    {\r\n                        this.props.imageUrl ?\r\n                            <div className=\"project-image\"><img src={this.props.imageUrl} alt={this.props.name}/></div>\r\n                            : (!this.props.name ? <></> :\r\n                                 <div className=\"project-name\">{/* this.props.name */}</div>)\r\n                    }\r\n\r\n                    <div className=\"project-title\">{\r\n                        this.props.account && this.props.transaction ?\r\n                            this.props.purchasedTitle : this.props.introTitle\r\n                    }</div>\r\n                    <div className=\"project-description-text\">{\r\n                        this.props.account && this.props.transaction ?\r\n                            this.props.purchasedDescription : this.props.introDescription\r\n                    }</div>\r\n                    {\r\n                        !this.props.whitepaperUrl ? <></> :\r\n                        <div><a className=\"whitePpr\" href={this.props.whitepaperUrl}>Read our whitepaper <span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        account : state.account,\r\n        transaction: state.transaction,\r\n        name : state.name,\r\n        imageUrl : state.imageUrl,\r\n        introTitle : state.introTitle,\r\n        introDescription : state.introDescription,\r\n        purchasedTitle: state.purchasedTitle,\r\n        purchasedDescription : state.purchasedDescription,\r\n        whitepaperUrl : state.whitepaperUrl\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDescription);\r\n","import StatefulComponent from \"../StatefulComponent\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PurchaseLimits extends StatefulComponent {\r\n    render() {\r\n        if(this.props.compact) {\r\n            return (\r\n                <>\r\n                    <div className=\"leftBottom\">Min {this.props.min} &ndash; Max {this.props.max}</div>\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"priceHolder\">\r\n                    <div className=\"leftPrice\">\r\n                        <span className=\"grayish\">Min purchase</span>\r\n                        <span className=\"priceValue\">{this.props.min}</span>\r\n                    </div>\r\n                    <div className=\"rightPrice\">\r\n                        <span className=\"grayish\">Max purchase</span>\r\n                        <span className=\"priceValue\">{this.props.max}</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        min : state.minInvest,\r\n        max : state.maxInvest\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseLimits);\r\n","import StatefulComponent from \"../StatefulComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseLimits from \"./PurchaseLimits\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass PurchaseForm extends StatefulComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.buy = this.buy.bind(this);\r\n        this.state = {\r\n            investAmount: 0\r\n        }\r\n    }\r\n\r\n    buy() {\r\n        if (Number(this.state.investAmount) < 100 || Number(this.state.investAmount) > 20000) {\r\n            toast.info(\"Please confirm your invest amount\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            return;\r\n        }\r\n        this.props.dispatch({type:\"BUY_TOKEN\", payload: {investTokenAmount: this.state.investAmount}});\r\n    }\r\n\r\n    handleChange(event) {\r\n        var value = event.target.value;\r\n        var pattern = /[^0-9.]/g;\r\n        let result = value.match(pattern);\r\n        if (!value || !result ) {\r\n            this.setState({investAmount: event.target.value});\r\n            this.props.dispatch({\r\n                type: 'GET_TOKEN_AMOUNT', payload: {investTokenAmount: event.target.value}\r\n              });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"purchase-form wallet-connection\">\r\n                    {/* <PurchaseLimits/> */}\r\n                    <div className=\"purchase-amount\">\r\n                        <form>\r\n                            \r\n                            <div className=\"newInputs\">\r\n\r\n                                <div className=\"leftInputs NewHolder\">\r\n\r\n                                <div className=\"amoutToken\"><label>Enter amount</label></div>\r\n                                    <div className=\"newInputsItem\">\r\n                                        <input type=\"text\" placeholder=\"1000\" value={this.state.investAmount} \r\n                                            onChange={this.handleChange}/>\r\n                                        <button className=\"selectDinar\">\r\n                                            <div className=\"optionDinar\" >\r\n                                                <div className=\"imageDinar\"><img alt=\"USDC.e\" src=\"https://raw.githubusercontent.com/ava-labs/avalanche-bridge-resources/main/tokens/USDC/logo.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"\">{this.props.investToken}</div>\r\n                                            {/* \r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" width=\"18\">\r\n                                                <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path>\r\n                                            </svg>\r\n                                            */}\r\n                                        </button>\r\n                                    </div>\r\n                                    <PurchaseLimits compact={true}/>\r\n                                </div>\r\n\r\n                                <div className=\"rightInputs NewHolder\">\r\n\r\n                                    <div className=\"amoutToken\"><label>{this.props.returnToken} token</label></div>\r\n                                    <div className=\"newInputsItem\">\r\n                                        {/* TODO: autofill token amount based on purchase amount */}\r\n                                        <input className=\"disablePointer\" type=\"text\" placeholder=\"Autofill\" \r\n                                            value={this.props.returnTokenAmount} onChange={()=>{}} readOnly/>\r\n                                        <button className=\"selectDinar\">\r\n                                            <div className=\"optionDinar\" >\r\n                                                <div className=\"imageDinar\"><img src=\"/img/swapsicle-coin.png\" alt=\"Swapsicle token\"/></div>\r\n                                            </div>\r\n                                            <div className=\"\">POP</div>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"leftBottom\">Token price: $0.20</div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"selectCtry\">\r\n                                <label>\r\n                                    Select country\r\n                                    <select>\r\n                                        <option>So many options</option>\r\n                                        <option>...</option>\r\n                                    </select>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"checkBoxr\">\r\n                                <label><input type=\"checkbox\" onChange={()=>{}}/> I have read the Terms &amp; Conditions</label>\r\n                            </div>\r\n                            <button className=\"connectWallet\" onClick={this.buy}>Buy now</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        investToken: state.investToken,\r\n        returnTokenAmount : state.returnTokenAmount,\r\n        returnToken: state.returnToken\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseForm);\r\n","import StatefulComponent from \"../StatefulComponent\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n  function copyDivToClipboard() {\r\n    var range = document.createRange();\r\n    range.selectNode(document.getElementById(\"toBeCopied\"));\r\n    window.getSelection().removeAllRanges(); // clear current selection\r\n    window.getSelection().addRange(range); // to select text\r\n    document.execCommand(\"copy\");\r\n    window.getSelection().removeAllRanges();// to deselect\r\n    document.getElementById(\"copyBtn\").classList.add('copiedTx');\r\n    // alert(\"Transaction ID has been copied to your clipboard.\");\r\n}\r\n\r\n\r\n\r\nclass PurchaseComplete extends StatefulComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"purchaseComplete wallet-connection\">\r\n                    <div className=\"video-container\">\r\n                        <iframe src=\"https://www.youtube.com/embed/7OS8Dxf75iw\" frameborder=\"0\" allow=\"encrypted-media\"/>\r\n                    </div>\r\n\r\n                    <div className=\"completeHolder\">\r\n                        <div className=\"orderDetails\">\r\n                            <div className=\"completeTitle\"><span className=\"grayish\">Order details</span></div>\r\n                            <div className=\"transacResume\">\r\n                                <img alt=\"USDC.e\" src=\"https://raw.githubusercontent.com/ava-labs/avalanche-bridge-resources/main/tokens/USDC/logo.png\" />\r\n                                <span className=\"cmplNmb\">1000.00</span>\r\n                                <span className=\"cmplCrncy\">USDC.e</span>\r\n                                <i className=\"fa-solid fa-arrow-right-long\"></i>\r\n                                <img src=\"/img/swapsicle-coin.png\" alt=\"Swapsicle token\"/>\r\n                                <span className=\"cmplNmb\">1000.00</span>\r\n                                <span className=\"cmplCrncy\">POP</span>\r\n                            </div>\r\n                                {/* \r\n                                <span>[purchasetokenimage] [purchaseamount] [purchasetoken] <i className=\"fa-solid fa-arrow-right-long\"></i> [returntokenimage] [returnamount] POP</span>\r\n                                */}\r\n                                \r\n\r\n                        </div>\r\n                        <div className=\"transactionIdHolder\">\r\n                            <div className=\"completeTitle\"><span className=\"grayish\">Transaction id</span></div>\r\n                            <div className=\"transacIdcopy\">\r\n                                <span id=\"toBeCopied\">[transactionid]</span>\r\n                                <button title=\"Copy the transaction ID to your clipboard.\" id=\"copyBtn\" className=\"copyTransactionId\" onClick={() => {copyDivToClipboard()}}>Copy<i class=\"fa-solid fa-check\"></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseComplete);\r\n","import React from 'react';\r\n\r\nconst Popup = (props) => {\r\n  return (\r\n    <div className='popup-box'>\r\n      <div className='box'>\r\n        <span className='close-icon' onClick={props.handleClose}>\r\n          X\r\n        </span>\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import StatefulComponent from \"../StatefulComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseForm from \"./PurchaseForm\";\r\nimport {toast} from \"react-toastify\";\r\nimport PurchaseLimits from \"./PurchaseLimits\";\r\nimport PurchaseComplete from \"./PurchaseComplete\";\r\n// mili popup\r\nimport Popup from './Popup/Popup';\r\n\r\nclass Purchase extends StatefulComponent {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n  constructor() {\r\n    super();\r\n    this.handleConnect = this.handleConnect.bind(this);\r\n  }\r\n\r\n  async handleConnect() {\r\n    if (window.ethereum) {\r\n      await window.ethereum.enable();\r\n      this.props.dispatch({\r\n        type: 'CONNECT_WALLET',\r\n      });\r\n    } else {\r\n      toast.info('Please install metamask on your device', {\r\n        position: 'top-center',\r\n        autoClose: 3000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    this.togglePopup();\r\n  }\r\n\r\n  togglePopup = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return props;\r\n  }\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.account ?\r\n                        (this.props.transaction ?\r\n                            <PurchaseComplete/>\r\n                            : (this.props.purchaseAllowed ?\r\n                                <PurchaseForm/>\r\n                                : <div className=\"purchase-not-allowed\">Your account is not allowed to purchase at this time.</div>))\r\n                        :\r\n                        <div className=\"wallet-connection selectWallet\">\r\n                            <PurchaseLimits/>\r\n                            <div><span className=\"grayish\">Sale information</span></div>\r\n                            <div className=\"wallet-text\">Public sale is open to all. NFT or Nest holders can only purchase once.</div>\r\n                            <button onClick={this.togglePopup} className=\"connectWallet\">Connect wallet to stake</button>\r\n                            {this.state.isOpen && (\r\n                                <Popup\r\n                                    content={\r\n                                    <>\r\n                                        <div className=\"connectTitle\">Connect a wallet</div>\r\n\r\n                                        <div className=\"walletHolder\">\r\n                                            <div className=\"walletItem\"><a onClick={this.handleConnect} href=\"#\"><img alt=\"MetaMask\" src=\"/img/MetaMask_Fox.png\" />MetaMask<span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                            {/* \r\n                                            <div className=\"walletItem\"><a href=\"#\">WalletConnect<span className=\"arrowRightBtn\"><i claclassNamess=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                            <div className=\"walletItem\"><a href=\"#\">Keystone<span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                            <div className=\"walletItem\"><a href=\"#\">Lattice<span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                            <div className=\"walletItem\"><a href=\"#\">Coinbase wallet<span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                            <div className=\"walletItem\"><a href=\"#\">Binance<span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                            <div className=\"walletItem\"><a href=\"#\">Clover<span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                            <div className=\"walletItem\"><a href=\"#\">Torus<span className=\"arrowRightBtn\"><i className=\"fa-solid fa-chevron-right\"></i></span></a></div>\r\n                                                */}\r\n                                        </div>\r\n                                    </>\r\n                                    }\r\n                                    handleClose={this.togglePopup}\r\n                                />\r\n                                )}\r\n                        </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transaction : state.transaction,\r\n        account : state.account,\r\n        purchaseAllowed: state.purchaseAllowed\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Purchase);\r\n","import StatefulComponent from \"../components/StatefulComponent\";\r\nimport { Toast } from \"../components/common/Toast\";\r\nimport { Footer } from \"../components/common/Footer\";\r\nimport { connect } from \"react-redux\";\r\nimport ProjectDescription from \"../components/invest/ProjectDescription\";\r\nimport Purchase from \"../components/invest/Purchase\";\r\n\r\nclass Home extends StatefulComponent {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Toast/>\r\n                <section id=\"HomeHero\">\r\n                    <ProjectDescription/>\r\n                    <Purchase/>\r\n                </section>\r\n                <Footer/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect()(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Admin extends React.Component {\r\n    render() {\r\n        // This page should only display for approved wallets\r\n        return (\r\n            <>\r\n                <h1>Admin</h1>\r\n                <h2>Settings for Swapsicle Whitelist</h2>\r\n                <div>Set presale or whitelist: Presale</div>\r\n                <div>Set project description: ...</div>\r\n                <div>Set project whitepaper link: ...</div>\r\n                <div>Set destination wallet: ...</div>\r\n                <div>Set purchase token: ...</div>\r\n                <div>Set payout token: POP</div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Admin);\r\n","import './App.css';\r\nimport Home from \"./pages/Home\";\r\nimport Admin from \"./pages/Admin\";\r\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />}/>\r\n          <Route path=\"/admin\" element={<Admin />}/>\r\n        </Routes>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import abi from './InvestManagementAbi.json';\r\nimport usdtAbi from './UsdtAbi.json';\r\n\r\nvar config = {\r\n    contractAbi: abi,\r\n    contractAddress: \"0x49CFab8e81f068Dcf1c00Feb1740F619b2d29862\",\r\n    coinAddress: \"0xc7198437980c041c805A1EDcbA50c1Ce5db95118\",\r\n    usdtAbi: usdtAbi,\r\n    chainId: '0xa86a'\r\n\r\n};\r\n\r\nexport default config; ","import { createStore } from 'redux'\r\nimport Web3 from 'web3';\r\nimport config from '../contract/index';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst _initialState = {\r\n    account: \"\",\r\n    purchaseAllowed: false,\r\n    \r\n    name: \"Swapsicle\",\r\n    imageUrl: \"\",\r\n    introTitle: \"Welcome to our presale\",\r\n    introDescription: \"On purchase POP tokens will be immediately sent to your wallet.\",\r\n    purchasedTitle: \"Congratulations!\",\r\n    purchasedDescription: \"Purchase complete. Your POP tokens will be immediately sent to your wallet.\",\r\n    whitepaperUrl: \"#\",\r\n    investToken: \"USDC.e\",\r\n    investTokenAmount: \"0\",\r\n    returnToken: \"POP\",\r\n    returnTokenAmout: \"0\",\r\n    minInvest: \"$ 100\",\r\n    maxInvest: \"$ 20,000\",\r\n    transaction: \"\"\r\n    \r\n}\r\n\r\nconst init = (init) => {\r\n    return init;\r\n}\r\n\r\nconst globalWeb3 = new Web3(config.mainNetUrl);\r\nconst provider = Web3.providers.HttpProvider(config.mainNetUrl);\r\nconst web3 = new Web3(Web3.givenProvider || provider);\r\n\r\nconst contract = new web3.eth.Contract(config.contractAbi, config.contractAddress);\r\nconst usdt = new web3.eth.Contract(config.usdtAbi, config.coinAddress);\r\n\r\nconst calcTokenAmount = async (state, investTokenAmount) => {\r\n    var coinDecimals = await usdt.methods.decimals().call();\r\n    var amount = new web3.utils.toBN(web3.utils.toWei(Number(investTokenAmount).toString(), 'ether'));\r\n    amount = amount.mul(new web3.utils.toBN(Math.pow(10, coinDecimals).toString()));\r\n    amount = amount.div(new web3.utils.toBN(Math.pow(10, 18).toString()));\r\n    try {\r\n        var value = await contract.methods.getUserRewardAmount(0, 0, amount, state.account).call();\r\n        var tokenAmount = web3.utils.fromWei(value[0], 'ether');\r\n        store.dispatch({ type: \"RETURN_DATA\", payload: { investTokenAmount: investTokenAmount, returnTokenAmount: tokenAmount, returnCoinAmount: value[1] } });\r\n    } catch (e) {\r\n        console.log(\"error: \", e);\r\n        store.dispatch({ type: \"RETURN_DATA\", payload: { returnTokenAmount: 0, returnCoinAmount: amount } });\r\n    }\r\n\r\n}\r\n\r\nconst buy = async (state, investTokenAmount) => {\r\n    if (!state.account) {\r\n        alertMsg(\"Please connect metamask!\");\r\n        return;\r\n    }\r\n    var coinDecimals = await usdt.methods.decimals().call();\r\n    var amount = new web3.utils.toBN(investTokenAmount);\r\n    amount = amount.mul(new web3.utils.toBN(Math.pow(10, coinDecimals).toString()));\r\n    amount = amount.sub(new web3.utils.toBN(state.returnCoinAmount));\r\n\r\n\r\n    await usdt.methods.approve(config.contractAddress, amount).send({ from: state.account });\r\n    await contract.methods.invest(0, 0, amount).send({ from: state.account, gas: 3000000 });\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = init(_initialState), action) => {\r\n    switch (action.type) {\r\n        case 'CONNECT_WALLET':\r\n            if (!checkNetwork(state.chainId)) { \r\n                changeNetwork();\r\n                return state;\r\n            } \r\n            web3.eth.getAccounts((err, accounts) => {\r\n                store.dispatch({\r\n                    type: 'RETURN_DATA',\r\n                    payload: { account: accounts[0], purchaseAllowed: true }\r\n                });\r\n            })\r\n            break;\r\n\r\n        case 'GET_TOKEN_AMOUNT':\r\n            if (!checkNetwork(state.chainId)) { \r\n                changeNetwork();\r\n                return state;\r\n            } \r\n            calcTokenAmount(state, action.payload.investTokenAmount);\r\n            break;\r\n\r\n        case 'BUY_TOKEN':\r\n            if (!checkNetwork(state.chainId)) { \r\n                changeNetwork();\r\n                return state;\r\n            } \r\n            buy(state, action.payload.investTokenAmount);\r\n            break;\r\n        case 'RETURN_DATA':\r\n            return Object.assign({}, state, action.payload);\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst alertMsg = (msg) => {\r\n    toast.info(msg, {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}\r\n\r\nconst checkNetwork = (chainId) => {\r\n    if (web3.utils.toHex(chainId) !== web3.utils.toHex(config.chainId)) {\r\n        alertMsg(\"Change network to Avalanche C Chain!\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nconst changeNetwork = async () => {\r\n    try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: config.chainId }],\r\n        });\r\n      } catch (switchError) {\r\n        // This error code indicates that the chain has not been added to MetaMask.\r\n        if (switchError.code === 4902) {\r\n          try {\r\n            await window.ethereum.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [\r\n                {\r\n                  chainId: config.chainId,\r\n                  chainName: 'Avalanche',\r\n                  rpcUrls: [config.mainNetUrl] /* ... */,\r\n                },\r\n              ],\r\n            });\r\n          } catch (addError) {\r\n          }\r\n        }\r\n      }\r\n}\r\n\r\n\r\nif (window.ethereum) {\r\n    window.ethereum.on('accountsChanged', function (accounts) {\r\n        store.dispatch({\r\n            type: \"RETURN_DATA\",\r\n            payload: { account: accounts[0] }\r\n        });\r\n    })\r\n    window.ethereum.on('chainChanged', function (chainId) {\r\n        checkNetwork(chainId);\r\n        store.dispatch({\r\n            type: \"RETURN_DATA\",\r\n            payload: { chainId: chainId }\r\n        });\r\n    });\r\n    web3.eth.getChainId().then((chainId) => {\r\n        checkNetwork(chainId);\r\n        store.dispatch({\r\n            type: \"RETURN_DATA\",\r\n            payload: { chainId: chainId }\r\n        });\r\n    })\r\n}\r\n\r\nconst store = createStore(reducer);\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./store/index\"\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}><App/></Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}